version: "3.8"

services:
  svc:
    container_name: app
    build:
      context: .
      target: development
      dockerfile: ./docker/svc/Dockerfile
    pull_policy: always
    working_dir: /app
    volumes:
      - .:/app
    command: npm start
    restart: unless-stopped
    environment:
      PG_USER: ${PG_USER}
      PG_HOST: ${PG_HOST}
      PG_DATABASE: ${PG_DATABASE}
      PG_PASSWORD: ${PG_PASSWORD}
      PG_PORT: ${PG_PORT}
      PORT: ${PORT}
    depends_on:
      postgres:
          condition: service_healthy
    ports:
      - 5010:5010

  postgres:
    image: postgres:14.15-alpine3.21
    container_name: db_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: task_manager
      POSTGRES_PASSWORD: 12345678
      POSTGRES_USER: postgres
    volumes:
      - ./docker/data/:/var/lib/postgresql/data:rw
    ports:
      - 15432:5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
